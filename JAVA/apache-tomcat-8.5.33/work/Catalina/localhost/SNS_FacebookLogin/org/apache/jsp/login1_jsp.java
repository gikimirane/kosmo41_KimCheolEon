/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.33
 * Generated at: 2018-09-06 02:34:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>Facebook Login JavaScript Example</title>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("  function statusChangeCallback(response) {\r\n");
      out.write("    console.log('statusChangeCallback');\r\n");
      out.write("    console.log(response);\r\n");
      out.write("\r\n");
      out.write("    if (response.status === 'connected') {\r\n");
      out.write("      testAPI();\r\n");
      out.write("    } else {\r\n");
      out.write("      document.getElementById('status').innerHTML = 'Please log ' +\r\n");
      out.write("        'into this app.';\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write("  function checkLoginState() {\r\n");
      out.write("    FB.getLoginStatus(function(response) {\r\n");
      out.write("      statusChangeCallback(response);\r\n");
      out.write("    });\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  window.fbAsyncInit = function() {\r\n");
      out.write("    FB.init({\r\n");
      out.write("      appId      : '883972785325002',\r\n");
      out.write("      cookie     : true,  // enable cookies to allow the server to access \r\n");
      out.write("                          // the session\r\n");
      out.write("      xfbml      : true,  // parse social plugins on this page\r\n");
      out.write("      version    : 'v3.1' // use graph api version 2.8\r\n");
      out.write("      //////////////버전 3.1로 교체\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    FB.getLoginStatus(function(response) {\r\n");
      out.write("      statusChangeCallback(response);\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("  };\r\n");
      out.write("\r\n");
      out.write("  // Load the SDK asynchronously\r\n");
      out.write("  (function(d, s, id) {\r\n");
      out.write("    var js, fjs = d.getElementsByTagName(s)[0];\r\n");
      out.write("    if (d.getElementById(id)) return;\r\n");
      out.write("    js = d.createElement(s); js.id = id;\r\n");
      out.write("    js.src = \"https://connect.facebook.net/en_US/sdk.js\";\r\n");
      out.write("    fjs.parentNode.insertBefore(js, fjs);\r\n");
      out.write("  }(document, 'script', 'facebook-jssdk'));\r\n");
      out.write("\r\n");
      out.write("  function testAPI() {\r\n");
      out.write("    console.log('Welcome!  Fetching your information.... ');\r\n");
      out.write("    FB.api('/me', function(response) {\r\n");
      out.write("      console.log('Successful login for: ' + response.name);\r\n");
      out.write("      document.getElementById('status').innerHTML =\r\n");
      out.write("        'Thanks for logging in, ' + response.name + '!';\r\n");
      out.write("    });\r\n");
      out.write("  }\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<fb:login-button scope=\"public_profile,email\" onlogin=\"checkLoginState();\">\r\n");
      out.write("</fb:login-button>\r\n");
      out.write("\r\n");
      out.write("<div id=\"status\">\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
